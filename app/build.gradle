apply plugin: 'com.android.application'
apply plugin: 'jacoco'


task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

	reports {
		xml.enabled = true
		html.enabled = true
	}

	def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
	def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
	def mainSrc = "${project.projectDir}/src/main/java"

	sourceDirectories = files([mainSrc])
	classDirectories = files([debugTree])
	executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

android {
	compileSdkVersion 26
	buildToolsVersion "26.0.0"
	defaultConfig {
		applicationId "com.phikod.unittest"
		minSdkVersion 16
		targetSdkVersion 26
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	testOptions {
		unitTests.all {
			jacoco {
				includeNoLocationClasses = true
			}
		}
	}

	buildTypes {
		debug {
			testCoverageEnabled true
		}

		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

build.dependsOn jacocoTestReport

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	compile 'com.android.support:appcompat-v7:26.+'
	compile 'com.android.support:design:26.+'
	compile 'com.android.support.constraint:constraint-layout:1.0.2'
	testCompile 'junit:junit:4.12'

	// required if you want to use Mockito for unit tests
	testCompile 'org.mockito:mockito-core:2.8.47'
//	// required if you want to use Mockito for Android tests
//	androidTestCompile 'org.mockito:mockito-android:2.7.22'
}
